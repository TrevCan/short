# Short. simple http server written in C


I started out this project as a simple project to create a simple HTTP Server
in C, originally based on this blog post: 
< https://bruinsslot.jp/post/simple-http-webserver-in-c/ >


### features
- returns headers
- url shortening service


Well, I've update this main.c file and it now spits the whole request (given
that it's less than 2000 bytes) when the GET Location contains the substring
`head`. Therefore, `header`,`headss`,`head*` will all respond to the same
function.

I'm also planning on adding a url request service to redirect it and shorten
it.
Even a small file hosting service would be nice. With a simple interface
available
thru curl and http(s) forms.


I do not plan on using any fancy data structures, in case you were wondering
why I wasn't using mySQL or uwsgi or any fancy stack. I'm trying to go
from the simplest thing here and create an MVP (minimal viable product).


# building
You can build using the `make` command (GNU Make), alternatively call the
`compile` target. It should work out of the box with any Linux-based 
distribution. Email me for any relevant library installation instructions.

# installing
you can use the `make install-systemd` command to install a systemd service.
The service assumes the compiled file is at `/var/www/short/serveme` so keep 
that in mind. You can edit the service file at `systemd/short.service` to
suit your needs.

# running
You may now enable and start the systemd service, provided you have compiled the latest
version of the program with `make`.

`systemctl enable --now short.service`.

The default port is `6969` but you can change it in the source code macros.



# resources
- https://bruinsslot.jp/post/simple-http-webserver-in-c/ 
- https://stackoverflow.com/questions/176409/build-a-simple-http-server-in-c#176477
